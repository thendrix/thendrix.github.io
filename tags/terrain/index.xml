<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terrain on Thoughts on GameDev</title>
    <link>/tags/terrain/</link>
    <description>Recent content in terrain on Thoughts on GameDev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/terrain/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sailing to the lighthouse</title>
      <link>/posts/2019/09/sailing-to-the-lighthouse/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019/09/sailing-to-the-lighthouse/</guid>
      <description>Stupid lighthouse&amp;hellip; I wonder why they have the beacon lit during the daytime? Why does it have 10 floors? #screenshotsaturday #indiedev #linux
 Old sailing video last seen on twitter &amp;nbsp;
 Rough pass done for lighthouse with physics and basic materials. Every floor is about as tall as the &amp;ldquo;cog&amp;rdquo; ship. Made some modular spiral staircases to remove them later because no one likes spinning around and around while running at walls&amp;hellip; go figure.</description>
    </item>
    
    <item>
      <title>Procedural Terrain Material</title>
      <link>/posts/2019/09/procedural-terrain-material/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019/09/procedural-terrain-material/</guid>
      <description>Late entry for #screenshotsaturday
I was taking a break from some other work, and reworked terrain shader proc sand to do all this with one texture and some slope/elevation aware noise and warping with LoD (no blending):
 Video of procedural material at shoreline &amp;nbsp;
 Here&amp;rsquo;s a still. Also did some &amp;lsquo;swirly noise&amp;rsquo; for blending grass/dirt types over terrain (camera very far away to see the effect) that looks like erosion.</description>
    </item>
    
    <item>
      <title>Terrain and Breadknives</title>
      <link>/posts/2019/05/terrain-and-breadknives/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019/05/terrain-and-breadknives/</guid>
      <description>What kind of knives do you guys use for slicing your procedural voxel terrain? When I slice with a serrated bread knife I get all these little blocks on the edges.
(Above is a joke.)
Terrain generated with only 3 density functions clipped at 4x4 sectors. #screenshotsaturday
OK, one more shitpost while taking a sick day.
#screenshotsaturday
        Screenshot Gallery &amp;nbsp;  </description>
    </item>
    
    <item>
      <title>Noise!</title>
      <link>/posts/2016/01/noise/</link>
      <pubDate>Sat, 30 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/posts/2016/01/noise/</guid>
      <description>Update Screenshots with realistic sized trees on same terrain, and fixed some links. :3
        Tree scale now in 10-20m range &amp;nbsp;  I noticed r/proceduralgeneration has a lot activity lately, so I thought I would do quick post on how I&amp;rsquo;m generating my current test islands with only 4 functions. This is what they typically look like:
   Terrain generated by simple density functions   Terrian Geometry I basically use both 2d and 3d simplex noise to add and subtract a global density function, which is described per terrain cube.</description>
    </item>
    
    <item>
      <title>Screenshot Weekend</title>
      <link>/posts/2015/12/screenshot-weekend/</link>
      <pubDate>Sun, 27 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/posts/2015/12/screenshot-weekend/</guid>
      <description>Well, mostly focused on non-renderer stuff this weekend like bringing more of the web editor interface into in-game viewport UI. A few minor improvements to sky with a simple per fragment Preetham, and ported all my shaders to the updated Kagura shader lang to get ready for Vulkan.
              Same scene with different foliage seeds and lighting &amp;nbsp;  Below is a simple test for tiling fbm independently for foliage generation with the threaded voxel sectors, so there is no need to do another physics based ray cast pass.</description>
    </item>
    
    <item>
      <title>Ugly Terrain</title>
      <link>/posts/2014/07/ugly-terrain/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014/07/ugly-terrain/</guid>
      <description>Getting tired of pure voxel terrain again, so I&amp;rsquo;m going to move voxel system to more of a detail terrain painting system. GPU Clipmaps are cool again, and much more flexible when it comes to foliage deco &amp;ndash; so hopefully this will be the last ugly terrain screenshot. Making the system to generate foliage with raycasts as seen in ye old island demo as fun for programmer art, however for deco painting artists don&amp;rsquo;t like that kind of thing.</description>
    </item>
    
    <item>
      <title>Terrain and Biomes and Flora oh my</title>
      <link>/posts/2013/10/terrain-and-biomes-and-flora-oh-my/</link>
      <pubDate>Mon, 07 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>/posts/2013/10/terrain-and-biomes-and-flora-oh-my/</guid>
      <description>So I dusted off the terrain / biome system to hook it up to the voxel terrain system, since it makes a lot more sense to model very large landmasses in a way people can understand. Density functions by parts isn&amp;rsquo;t a bad thing, but even if you expose this with a UI flow graph &amp;ndash; who the fuck is going to understand it that also wants to use a flow graph chart?</description>
    </item>
    
    <item>
      <title>Voxel Terrain Sector Preview</title>
      <link>/posts/2013/09/voxel-terrain-sector-preview/</link>
      <pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/posts/2013/09/voxel-terrain-sector-preview/</guid>
      <description>Got the basic voxel terrain in today. The most time was spent on new ways to generate and enqueue Voxels, RenderMesh, PhysicsMesh in various worker threads and sync them amongst all the subsystems. Also refactored some of the math library and noise generation while in there to avoid overlap.
   Voxel Terrain Sectors 2x1x2   The scale of this image required me to adjust my camera&amp;hellip; typical player could be about as big as a pixel here&amp;hellip; going to hook this up to my biome and erosion simulation next.</description>
    </item>
    
    <item>
      <title>Isosurface Extraction done quick</title>
      <link>/posts/2013/09/isosurface-extraction-done-quick/</link>
      <pubDate>Sat, 07 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/posts/2013/09/isosurface-extraction-done-quick/</guid>
      <description>Cross post from Google+:
Voxels and Triplanar Mapping only took a day and a half thanks to the excellent docs from Nvidia and my awesome little engine that could. Going to work in real-time editing and maybe tessellation guided by isosurface extraction later if I don&amp;rsquo;t get sidetracked with other big features. This is a CPU converted isosurface to standard mesh to use the CPU side physics. eg voxels -&amp;gt; mesh.</description>
    </item>
    
  </channel>
</rss>